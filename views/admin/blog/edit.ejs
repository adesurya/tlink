<!-- views/admin/blog/edit.ejs -->
<%- include('../../partials/admin-header') %>

<div class="admin-container">
  <%- include('../../partials/admin-sidebar', { active: 'blog' }) %>
  
  <main class="admin-content">
    <div class="admin-header">
      <h1>Edit Product Review</h1>
      <p>Update this product review post</p>
    </div>
    
    <% if (error && error.length > 0) { %>
      <div class="alert alert-error">
        <i class="fas fa-exclamation-circle"></i> <%= error %>
      </div>
    <% } %>
    
    <% if (success && success.length > 0) { %>
      <div class="alert alert-success">
        <i class="fas fa-check-circle"></i> <%= success %>
      </div>
    <% } %>
    
    <div class="admin-form">
      <form action="/admin/blog/edit/<%= post._id %>" method="POST" enctype="multipart/form-data">
        <div class="form-card">
          <div class="form-card-header">
            <h3>Basic Information</h3>
          </div>
          <div class="form-card-body">
            <div class="form-row">
              <div class="form-group form-group-full">
                <label for="title">Title <span class="required">*</span></label>
                <input type="text" id="title" name="title" required value="<%= post.title %>" placeholder="Enter review title">
              </div>
            </div>
            
            <div class="form-row">
              <div class="form-group">
                <label for="category">Category <span class="required">*</span></label>
                <select id="category" name="category" required>
                  <option value="">Select Category</option>
                  <% categories.forEach(category => { %>
                    <option value="<%= category._id %>" <%= post.category && post.category._id.toString() === category._id.toString() ? 'selected' : '' %>><%= category.name %></option>
                  <% }); %>
                </select>
              </div>
              
              <div class="form-group">
                <label for="status">Status</label>
                <div class="checkbox-group">
                  <input type="checkbox" id="isPublished" name="isPublished" <%= post.isPublished ? 'checked' : '' %>>
                  <label for="isPublished">Published</label>
                </div>
              </div>
            </div>
            
            <div class="form-row">
              <div class="form-group form-group-full">
                <label for="thumbnail">Featured Image</label>
                <div class="current-thumbnail">
                  <img src="<%= post.thumbnail %>" alt="<%= post.title %>">
                  <span>Current featured image</span>
                </div>
                <input type="file" id="thumbnail" name="thumbnail" accept="image/*">
                <small>Leave empty to keep current image. Recommended size: 1200x800px, Max 5MB. Formats: JPG, PNG, GIF, WebP.</small>
                <div id="thumbnailPreview" class="image-preview"></div>
              </div>
            </div>
            
            <div class="form-row">
              <div class="form-group form-group-full">
                <label for="summary">Summary</label>
                <textarea id="summary" name="summary" rows="3" placeholder="Brief summary of the review (optional - will be auto-generated if left empty)"><%= post.summary %></textarea>
                <small>Maximum 150 characters. Leave empty to auto-generate from content.</small>
              </div>
            </div>
            
            <div class="form-row">
              <div class="form-group form-group-full">
                <label for="tags">Tags</label>
                <input type="text" id="tags" name="tags" value="<%= post.tags ? post.tags.join(', ') : '' %>" placeholder="Enter tags separated by commas">
                <small>E.g. beauty, skincare, makeup</small>
              </div>
            </div>
          </div>
        </div>
        
        <div class="form-card">
          <div class="form-card-header">
            <h3>Review Content</h3>
          </div>
          <div class="form-card-body">
            <div class="form-row">
              <div class="form-group form-group-full">
                <label for="content">Content <span class="required">*</span></label>
                <textarea id="content" name="content" required><%= post.content %></textarea>
              </div>
            </div>
          </div>
        </div>
        
        <div class="form-card">
          <div class="form-card-header">
            <h3>Related Products</h3>
          </div>
          <div class="form-card-body">
            <div class="form-row">
              <div class="form-group form-group-full">
                <label>Select Related Products</label>
                <div class="products-selection">
                  <div class="search-box">
                    <input type="text" id="productSearch" placeholder="Search products...">
                  </div>
                  
                  <div class="products-list">
                    <% if (products && products.length > 0) { %>
                      <% 
                        // Group products by category
                        const productsByCategory = {};
                        products.forEach(product => {
                          const categoryId = product.category ? product.category._id.toString() : 'uncategorized';
                          const categoryName = product.category ? product.category.name : 'Uncategorized';
                          
                          if (!productsByCategory[categoryId]) {
                            productsByCategory[categoryId] = {
                              name: categoryName,
                              products: []
                            };
                          }
                          
                          productsByCategory[categoryId].products.push(product);
                        });
                      %>
                      
                      <% Object.keys(productsByCategory).forEach(categoryId => { %>
                        <div class="product-category-group">
                          <div class="product-category-header">
                            <h4><%= productsByCategory[categoryId].name %></h4>
                          </div>
                          <div class="product-items">
                            <% productsByCategory[categoryId].products.forEach(product => { %>
                              <div class="product-item" data-name="<%= product.name.toLowerCase() %>">
                                <label class="product-checkbox">
                                  <input type="checkbox" name="relatedProducts" value="<%= product._id %>" <%= post.relatedProducts && post.relatedProducts.some(p => p.toString() === product._id.toString()) ? 'checked' : '' %>>
                                  <div class="product-details">
                                    <img src="<%= product.image %>" alt="<%= product.name %>" class="product-image">
                                    <div class="product-info">
                                      <div class="product-name"><%= product.name %></div>
                                      <div class="product-price">
                                        <% if (product.discountPrice > 0) { %>
                                          <del>Rp <%= product.price.toLocaleString('id-ID') %></del>
                                          <span>Rp <%= product.discountPrice.toLocaleString('id-ID') %></span>
                                        <% } else { %>
                                          <span>Rp <%= product.price.toLocaleString('id-ID') %></span>
                                        <% } %>
                                      </div>
                                    </div>
                                  </div>
                                </label>
                              </div>
                            <% }); %>
                          </div>
                        </div>
                      <% }); %>
                    <% } else { %>
                      <div class="no-products">
                        <p>No products available. Please add products first.</p>
                      </div>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="form-actions">
          <a href="/admin/blog" class="btn btn-secondary">Cancel</a>
          <button type="submit" class="btn btn-primary">Update Review</button>
        </div>
      </form>
    </div>
  </main>
</div>

<style>
  .form-card {
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    margin-bottom: 25px;
    overflow: hidden;
  }
  
  .form-card-header {
    background-color: #f9fafb;
    padding: 15px 20px;
    border-bottom: 1px solid #eee;
  }
  
  .form-card-header h3 {
    margin: 0;
    font-size: 18px;
    font-weight: 600;
    color: #333;
  }
  
  .form-card-body {
    padding: 20px;
  }
  
  .form-row {
    display: grid;
    grid-template-columns: 1fr;
    gap: 20px;
    margin-bottom: 20px;
  }
  
  .form-row:last-child {
    margin-bottom: 0;
  }
  
  @media (min-width: 768px) {
    .form-row {
      grid-template-columns: 1fr 1fr;
    }
  }
  
  .form-group-full {
    grid-column: 1 / -1;
  }
  
  .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #333;
  }
  
  .required {
    color: #e74c3c;
  }
  
  input[type="text"],
  input[type="file"],
  select,
  textarea {
    width: 100%;
    padding: 10px 12px;
    border: 1px solid #ddd;
    border-radius: 6px;
    font-size: 14px;
    transition: border-color 0.2s;
  }
  
  input[type="text"]:focus,
  select:focus,
  textarea:focus {
    border-color: var(--secondary-color);
    outline: none;
  }
  
  textarea {
    resize: vertical;
    min-height: 100px;
  }
  
  #content {
    min-height: 400px;
  }
  
  small {
    display: block;
    margin-top: 5px;
    color: #777;
    font-size: 12px;
  }
  
  .checkbox-group {
    display: flex;
    align-items: center;
    margin-top: 8px;
  }
  
  .checkbox-group input[type="checkbox"] {
    margin-right: 8px;
  }
  
  .current-thumbnail {
    margin-bottom: 15px;
    display: flex;
    align-items: center;
  }
  
  .current-thumbnail img {
    width: 100px;
    height: 70px;
    object-fit: cover;
    border-radius: 5px;
    margin-right: 10px;
  }
  
  .current-thumbnail span {
    font-size: 13px;
    color: #666;
  }
  
  .image-preview {
    margin-top: 10px;
    max-width: 300px;
    border-radius: 5px;
    overflow: hidden;
    display: none;
  }
  
  .image-preview img {
    width: 100%;
    height: auto;
  }
  
  .products-selection {
    margin-top: 10px;
    border: 1px solid #eee;
    border-radius: 6px;
  }
  
  .search-box {
    padding: 10px;
    border-bottom: 1px solid #eee;
  }
  
  .products-list {
    max-height: 400px;
    overflow-y: auto;
    padding: 10px;
  }
  
  .product-category-group {
    margin-bottom: 15px;
  }
  
  .product-category-header {
    padding: 5px 10px;
    background-color: #f5f7fb;
    border-radius: 5px;
    margin-bottom: 10px;
  }
  
  .product-category-header h4 {
    margin: 0;
    font-size: 14px;
    font-weight: 600;
    color: #555;
  }
  
  .product-items {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 10px;
  }
  
  .product-item {
    position: relative;
  }
  
  .product-checkbox {
    display: block;
    cursor: pointer;
  }
  
  .product-checkbox input {
    position: absolute;
    top: 10px;
    left: 10px;
    z-index: 1;
  }
  
  .product-details {
    display: flex;
    border: 1px solid #eee;
    border-radius: 5px;
    overflow: hidden;
    transition: all 0.2s;
  }
  
  .product-checkbox input:checked + .product-details {
    border-color: var(--secondary-color);
    background-color: #f0f7ff;
  }
  
  .product-image {
    width: 70px;
    height: 70px;
    object-fit: cover;
  }
  
  .product-info {
    flex: 1;
    padding: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  
  .product-name {
    font-size: 14px;
    margin-bottom: 5px;
    line-height: 1.3;
  }
  
  .product-price {
    font-size: 12px;
    color: var(--primary-color);
  }
  
  .product-price del {
    color: #999;
    margin-right: 5px;
  }
  
  .form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
  }
  
  .btn {
    padding: 10px 20px;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;
    border: none;
  }
  
  .btn-primary {
    background-color: var(--secondary-color);
    color: white;
  }
  
  .btn-primary:hover {
    background-color: #4060e0;
  }
  
  .btn-secondary {
    background-color: #f5f5f8;
    color: #333;
  }
  
  .btn-secondary:hover {
    background-color: #e9ecf6;
  }
  
  .no-products {
    padding: 20px;
    text-align: center;
    color: #888;
    font-style: italic;
  }
</style>

<!-- Include TinyMCE Editor -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/tinymce/5.10.7/tinymce.min.js" integrity="sha512-n3wBGaxltKw2QAK5XhHvQUxlRvQBXX9Dr2S1Lw4wMFx9xo3lzjF96JXhpLR7xt8Oq/8bd+MTD7NpZWVO1QJyQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize TinyMCE editor
    tinymce.init({
      selector: '#content',
      height: 500,
      menubar: true,
      branding: false,  // Remove TinyMCE branding
      promotion: false, // Remove promotion message
      plugins: [
        'advlist autolink lists link image charmap print preview anchor',
        'searchreplace visualblocks code fullscreen',
        'insertdatetime media table paste code help wordcount'
      ],
      toolbar: 'undo redo | formatselect | ' +
        'bold italic backcolor | alignleft aligncenter ' +
        'alignright alignjustify | bullist numlist outdent indent | ' +
        'removeformat | help | link image',
      content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',
      // Add image upload handler
      image_upload_url: '/admin/blog/upload-image',
      images_upload_handler: function (blobInfo, success, failure) {
        // Create a FormData object
        var formData = new FormData();
        formData.append('file', blobInfo.blob(), blobInfo.filename());
        
        // Send the file to the server
        fetch('/admin/blog/upload-image', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(result => {
          if (result.location) {
            success(result.location);
          } else {
            failure('Image upload failed');
          }
        })
        .catch(error => {
          console.error('Error:', error);
          // Fallback to base64 if server upload fails
          var reader = new FileReader();
          reader.onload = function () {
            success(reader.result);
          };
          reader.readAsDataURL(blobInfo.blob());
        });
      },
      // Initialize with the current content
      setup: function(editor) {
        editor.on('init', function() {
          // This ensures the editor is not in read-only mode
          editor.setMode('design');
        });
      }
    });
    
    // Thumbnail preview
    const thumbnailInput = document.getElementById('thumbnail');
    const thumbnailPreview = document.getElementById('thumbnailPreview');
    
    thumbnailInput.addEventListener('change', function() {
      if (this.files && this.files[0]) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
          thumbnailPreview.innerHTML = `<img src="${e.target.result}" alt="Thumbnail Preview">`;
          thumbnailPreview.style.display = 'block';
        };
        
        reader.readAsDataURL(this.files[0]);
      }
    });
    
    // Product search filter
    const productSearch = document.getElementById('productSearch');
    const productItems = document.querySelectorAll('.product-item');
    
    productSearch.addEventListener('input', function() {
      const searchTerm = this.value.toLowerCase();
      
      productItems.forEach(item => {
        const productName = item.dataset.name;
        if (productName.includes(searchTerm)) {
          item.style.display = 'block';
        } else {
          item.style.display = 'none';
        }
      });
      
      // Show/hide category groups based on visible products
      document.querySelectorAll('.product-category-group').forEach(group => {
        const visibleProducts = group.querySelectorAll('.product-item[style*="display: block"]').length;
        group.style.display = visibleProducts > 0 ? 'block' : 'none';
      });
    });
  });
</script>

<%- include('../../partials/admin-footer') %>